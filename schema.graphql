enum HistoryElementType {
	CALL
	EVENT
}

type StakeChange @entity {
	id: ID!
	blockHeight: Int! @index
	blockHash: String! @index
	timestamp: Int! @index
	success: Boolean!
  address: String! @index
  amount: String!
  name: String!
  type: String!
	module: String! @index
	method: String! @index
  accumulatedAmount: BigInt!
	data: JSON @index
}

type AccumulatedStake @entity {
  id: ID!
  amount: BigInt!
}

type Transfer @jsonField {
  amount: String
  to: String
  from: String
  fee: String
}

type Reward @jsonField {
  amount: String!
  era: Int,
  stash: String,
}

type HistoryElement @entity {
	id: ID!
	entityType: HistoryElementType!
	blockHeight: Int! @index
	blockHash: String! @index
  address: String @index
	timestamp: Int! @index
	extrinsicIdx: Int @index
	extrinsicHash: String @index
	module: String! @index
	method: String! @index
	type: String! @index
	data: JSON @index
  success: Boolean!
  name: String!
	reward: Reward
  transfer: Transfer
}

type EraValidatorInfo @entity {
  id: ID!
  address: String! @index
  era: Int! @index
  total: BigInt!
  own: BigInt!
  others: [IndividualExposure]!
  othersWho: String!
}

type IndividualExposure @jsonField {
  who: String!
  value: String!
}

type StakingEra @entity {
	id: ID!
	index: Int! @index
	start: BigInt! @index
}
